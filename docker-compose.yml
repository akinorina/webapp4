#
# docker-compose.yml
#
services:
  #
  # database by MySQL
  #
  db:
    container_name: db
    hostname: ${DATABASE_HOST}
    image: mysql:9.0.1
    volumes:
      - ./db/data:/var/lib/mysql
      - ./db/initdb.d:/docker-entrypoint-initdb.d
    ports:
      - ${DATABASE_PORT}:3306
    environment:
      TZ: Asia/Tokyo
      MYSQL_ROOT_PASSWORD: ${DATABASE_ROOT_PASSWORD}
      MYSQL_USER: ${DATABASE_USER}
      MYSQL_PASSWORD: ${DATABASE_PASSWORD}
      MYSQL_DATABASE: ${DATABASE_DBNAME}
    networks:
      - backend
    healthcheck:
      test: mysqladmin ping -h0.0.0.0 -P3306 -u$$MYSQL_USER -p$$MYSQL_PASSWORD
      start_period: 3s
      retries: 3
      timeout: 1s
      interval: 1s

  #
  # phpMyAdmin
  #
  db-admin:
    container_name: db-admin
    hostname: phpmyadmin
    image: phpmyadmin
    restart: always
    volumes:
      - phpmyadmin_data:/sessions
    ports:
      - 8080:80
    environment:
      TZ: Asia/Tokyo
      PMA_ARBITRARY: 1
      PMA_HOSTS: ${DATABASE_HOST}
      PMA_USER: root
      PMA_PASSWORD: ${DATABASE_ROOT_PASSWORD}
    networks:
      - backend
    depends_on:
      - db

  #
  # SMTP by mailpit
  #
  smtp:
    container_name: smtp
    image: axllent/mailpit
    restart: always
    volumes:
      - mail_data:/data
    ports:
      - 8025:8025
      - 1025:1025
    environment:
      MP_MAX_MESSAGES: 5000
      MP_DATA_FILE: /data/mailpit.db
      MP_SMTP_AUTH_ACCEPT_ANY: 1
      MP_SMTP_AUTH_ALLOW_INSECURE: 1
    networks:
      - backend

  #
  # MinIO
  #
  minio:
    image: quay.io/minio/minio:latest
    container_name: minio
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    command: server --console-address ":9001" /data
    ports:
      - 9000:9000
      - 9001:9001
    volumes:
      - ./minio/data:/data
    networks:
      - backend

  #
  # server app.
  #
  webapp4_server:
    container_name: webapp4_server
    build:
      context: ../webapp4_server_nestjs
      dockerfile: Dockerfile
    ports:
      - 3000:3000
    networks:
      - backend
    environment:
      # Database (MySQL)
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_USER: ${DATABASE_USER}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_DBNAME: ${DATABASE_DBNAME}
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ['CMD-SHELL', 'curl http://localhost:3000/api || exit 1']
      start_period: 3s
      retries: 3
      timeout: 1s
      interval: 1s

  #
  # client app.
  #
  webapp4_client:
    container_name: webapp4_client
    build:
      context: ../webapp4_client_vue3
      dockerfile: Dockerfile
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx/log:/var/log/nginx
    networks:
      - backend
    depends_on:
      webapp4_server:
        condition: service_healthy

networks:
  backend: {}

volumes:
  phpmyadmin_data: null
  mail_data: null
